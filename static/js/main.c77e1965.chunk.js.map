{"version":3,"sources":["components/emptyList.jsx","components/header.jsx","repo/todo_crud.js","components/app.jsx","index.js"],"names":["useStyles","makeStyles","theme","container","display","justifyContent","alignItems","height","color","EmptyList","classes","Fragment","Typography","className","variant","notchedOutline","borderColor","AddToDo","InitialState","todo_text","todo_id","useState","value","setValue","initialValue","todos","setTodos","getTodos","addTodo","item","concat","deleteTodo","filter","td","TodoRepo","onSubmit","event","preventDefault","TextField","id","label","fullWidth","InputProps","onChange","target","Date","now","length","List","component","map","ListItem","key","button","ListItemText","primary","IconButton","aria-label","onClick","style","red","App","ReactDOM","render","document","getElementById"],"mappings":"kSAIMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,UAAW,CACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,OACRC,MAAM,YAKDC,EAAY,WACrB,IAAMC,EAAUV,IAChB,OACI,kBAAC,IAAMW,SAAP,KACI,kBAACC,EAAA,EAAD,CAAYC,UAAWH,EAAQP,UAAWW,QAAQ,MAAlD,sD,QCJNd,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCa,eAAgB,CACdC,YAAa,uBAwDFC,EApDC,WAEd,IAAMC,EAAe,CAAEC,UAAW,GAAIC,QAAS,IAF3B,EAGMC,mBAASH,GAHf,mBAGbI,EAHa,KAGNC,EAHM,OCnBE,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACjBH,mBAASG,GADQ,mBACpCC,EADoC,KAC7BC,EAD6B,KAE3C,MAAO,CACHD,QACAE,SAAU,WACN,OAAOF,GAEXG,QAAS,SAAAC,GACiB,IAAlBA,EAAKV,WACLO,EACID,EAAMK,OAAOD,KAIzBE,WAAY,SAAAF,GACc,IAAlBA,EAAKV,WACLO,EACID,EAAMO,QAAO,SAACC,GACV,OAAOA,EAAGb,SAAWS,EAAKT,cDKCc,GAAzCT,EAJY,EAIZA,MAAiBG,GAJL,EAILD,SAJK,EAIKC,SAASG,EAJd,EAIcA,WAC5BrB,EAAUV,IAEhB,OACE,kBAAC,IAAMW,SAAP,KACE,0BAAMwB,SAAU,SAACC,GACfA,EAAMC,iBACNT,EAAQN,GACRC,EAASL,KAET,kBAACoB,EAAA,EAAD,CAAWxB,QAAQ,WACjByB,GAAG,iBACHC,MAAM,kBACNC,WAAS,EACTC,WAAY,CACVhC,QAAS,CACPK,eAAgBL,EAAQK,iBAG5B4B,SAAU,SAACP,GACTb,EAAS,CAAEJ,UAAWiB,EAAMQ,OAAOtB,MAAOF,QAASyB,KAAKC,SAE1DxB,MAAOA,EAAMH,aAEhBM,EAAMsB,OAAS,EAEd,kBAACC,EAAA,EAAD,CAAMC,UAAU,OACbxB,EAAMyB,KAAI,SAAArB,GAAI,OACb,kBAACsB,EAAA,EAAD,CAAUC,IAAKvB,EAAKT,QAASiC,QAAM,GACjC,kBAACC,EAAA,EAAD,CAAcC,QAAS1B,EAAKV,YAC5B,kBAACqC,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,WACP3B,EAAWF,KAEb,kBAAC,IAAD,CAAY8B,MAAO,CAAEnD,MAAOoD,IAAI,cAOxC,kBAAC,EAAD,QEvDOC,EARH,WACR,OACI,kBAAC,IAAMlD,SAAP,KACI,kBAAC,EAAD,QCFZmD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c77e1965.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '50vh',\r\n        color:\"gray\"\r\n    }\r\n}))\r\n\r\n\r\nexport const EmptyList = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <React.Fragment>\r\n            <Typography className={classes.container} variant=\"h6\">\r\n               Use the textbox above to start adding todo items\r\n            </Typography>\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { TodoRepo } from '../repo/todo_crud';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { EmptyList } from './emptyList'\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  notchedOutline: {\r\n    borderColor: \"gray !important\"\r\n  }\r\n}))\r\n\r\nconst AddToDo = () => {\r\n\r\n  const InitialState = { todo_text: '', todo_id: '' };\r\n  const [value, setValue] = useState(InitialState);\r\n  const { todos, getTodos, addTodo, deleteTodo } = TodoRepo();\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={(event) => {\r\n        event.preventDefault();\r\n        addTodo(value);\r\n        setValue(InitialState)\r\n      }}>\r\n        <TextField variant=\"outlined\"\r\n          id=\"standard-basic\"\r\n          label=\"What's the todo\"\r\n          fullWidth\r\n          InputProps={{\r\n            classes: {\r\n              notchedOutline: classes.notchedOutline\r\n            }\r\n          }}\r\n          onChange={(event) => {\r\n            setValue({ todo_text: event.target.value, todo_id: Date.now() });\r\n          }}\r\n          value={value.todo_text} />\r\n      </form>\r\n      {todos.length > 0 ?\r\n\r\n        <List component=\"nav\">\r\n          {todos.map(item => (\r\n            <ListItem key={item.todo_id} button>\r\n              <ListItemText primary={item.todo_text} />\r\n              <IconButton\r\n                aria-label=\"Delete\"\r\n                onClick={() => {\r\n                  deleteTodo(item);\r\n                }}>\r\n                <DeleteIcon style={{ color: red[200] }} />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n\r\n        </List>\r\n        :\r\n        <EmptyList />\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AddToDo;","import { useState } from 'react';\r\n\r\nexport const TodoRepo = (initialValue = []) => {\r\n    const [todos, setTodos] = useState(initialValue);\r\n    return {\r\n        todos,\r\n        getTodos: () =>{\r\n            return todos\r\n        },\r\n        addTodo: item => {\r\n            if (item.todo_text != \"\") {\r\n                setTodos(\r\n                    todos.concat(item)\r\n                )\r\n            }\r\n        },\r\n        deleteTodo: item => {\r\n            if (item.todo_text != \"\") {\r\n                setTodos(\r\n                    todos.filter((td) => {\r\n                        return td.todo_id != item.todo_id\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n};","import React from 'react';\r\n\r\nimport AddToDo from './header';\r\n\r\nconst App = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <AddToDo />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}